{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Downloads\\\\box office\\\\my-react-app\\\\src\\\\components\\\\actor\\\\ActorGrid.js\";\nimport React from 'react';\nimport ActorCard from './ActorCard';\nimport IMAGE_NOT_FOUND from '../../images/not-found.png';\nimport { FlexGrid } from '../styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActorGrid = _ref => {\n  let {\n    data\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FlexGrid, {\n    children: data.map(_ref2 => {\n      let {\n        person\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(ActorCard, {\n        name: person.name,\n        country: person.country ? person.country.name : null,\n        birthday: person.birthday,\n        deathday: person.deathday,\n        gender: person.gender,\n        image: person.image ? person.image.medium : IMAGE_NOT_FOUND\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ActorGrid;\nexport default ActorGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActorGrid\");","map":{"version":3,"names":["React","ActorCard","IMAGE_NOT_FOUND","FlexGrid","ActorGrid","data","map","person","name","country","birthday","deathday","gender","image","medium","id"],"sources":["C:/Users/dell/Downloads/box office/my-react-app/src/components/actor/ActorGrid.js"],"sourcesContent":["import React from 'react'\nimport ActorCard from './ActorCard'\nimport IMAGE_NOT_FOUND from '../../images/not-found.png'\nimport {FlexGrid} from '../styled'\nconst ActorGrid = ({data}) => {\n  return (\n    <FlexGrid>\n        {\n            data.map(({person}) => (\n                <ActorCard key = {person.id}\n                name = {person.name}\n                country = {person.country ? person.country.name : null}\n                birthday = {person.birthday}\n                deathday = {person.deathday}\n                gender = {person.gender}\n                image = {person.image ? person.image.medium : IMAGE_NOT_FOUND}\n                />\n            ))\n        }\n    </FlexGrid>\n  )\n}\n\nexport default ActorGrid"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,SAAQC,QAAR,QAAuB,WAAvB;;;AACA,MAAMC,SAAS,GAAG,QAAY;EAAA,IAAX;IAACC;EAAD,CAAW;EAC5B,oBACE,QAAC,QAAD;IAAA,UAEQA,IAAI,CAACC,GAAL,CAAS;MAAA,IAAC;QAACC;MAAD,CAAD;MAAA,oBACL,QAAC,SAAD;QACA,IAAI,EAAIA,MAAM,CAACC,IADf;QAEA,OAAO,EAAID,MAAM,CAACE,OAAP,GAAiBF,MAAM,CAACE,OAAP,CAAeD,IAAhC,GAAuC,IAFlD;QAGA,QAAQ,EAAID,MAAM,CAACG,QAHnB;QAIA,QAAQ,EAAIH,MAAM,CAACI,QAJnB;QAKA,MAAM,EAAIJ,MAAM,CAACK,MALjB;QAMA,KAAK,EAAIL,MAAM,CAACM,KAAP,GAAeN,MAAM,CAACM,KAAP,CAAaC,MAA5B,GAAqCZ;MAN9C,GAAkBK,MAAM,CAACQ,EAAzB;QAAA;QAAA;QAAA;MAAA,QADK;IAAA,CAAT;EAFR;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAjBD;;KAAMX,S;AAmBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}